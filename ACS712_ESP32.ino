#define LINE_USER_ID ""
#define LINE_TOKEN ""

#include <WiFi.h>
#include <HTTPClient.h>
#include "ACS712.h"

char ssid[] = "";            // ‡∏ä‡∏∑‡πà‡∏≠ WiFi
char pass[] = "";       // ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô WiFi

ACS712 ACS(34, 3.3, 4095, 125);    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ ACS712
int calibration_factor = 120;
const float voltage = 230.0;       // ‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà 230V

unsigned long lastAlertTime = 0;   // ‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
bool hasSentInitialAlert = false;  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á

void setup() {
  Serial.begin(115200);
  
  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô WiFi
  WiFi.begin(ssid, pass);
  Serial.print("Connecting to WiFi");
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("\nWiFi Connected!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());
}

void loop() {
  float current = readCurrent();
  float power = voltage * (current / 1000.0); // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ (Watt)

  bool isCurrentActive = current > 500;  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡πÄ‡∏Å‡∏¥‡∏ô 500mA)
  unsigned long currentTime = millis();  // ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô

  // ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  if (isCurrentActive && !hasSentInitialAlert) {
    sendMessage("‚ö° ‡∏õ‡∏•‡∏±‡πä‡∏Å‡πÑ‡∏ü‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å\nüîå Voltage: " + String(voltage) + " V\n‚ö° Current: " + String(current) + " mA\nüí° Power: " + String(power, 2) + " W");
    lastAlertTime = currentTime;  
    hasSentInitialAlert = true;  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
  }

  // ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ã‡πâ‡∏≥‡∏ó‡∏∏‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  if (isCurrentActive && hasSentInitialAlert && (currentTime - lastAlertTime >= 300000)) {  
    sendMessage("‚ö° ‡∏õ‡∏•‡∏±‡πä‡∏Å‡πÑ‡∏ü‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\nüîå Voltage: " + String(voltage) + " V\n‚ö° Current: " + String(current) + " mA\nüí° Power: " + String(power, 2) + " W");
    lastAlertTime = currentTime;  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
  }

  // ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
  if (!isCurrentActive && hasSentInitialAlert) {
    sendMessage("‚úÖ ‡∏õ‡∏•‡∏±‡πä‡∏Å‡πÑ‡∏ü‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß\nüîå Voltage: " + String(voltage) + " V");
    lastAlertTime = 0;  // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    hasSentInitialAlert = false; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
  }

  delay(1000);  // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
}

float readCurrent() {
  float average = 0;
  for (int i = 0; i < 100; i++) {
    average += ACS.mA_AC();
  }
  float mA = (abs(average / 100.0) - calibration_factor);
  if (mA <= 5) mA = 0;

  float power = voltage * (mA / 1000.0); // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ (Watt)

  Serial.print("üîå  Voltage: ");
  Serial.print(voltage);
  Serial.print(" V,‚ö° Current: ");
  Serial.print(mA);
  Serial.print(" mA,üí° Power: ");
  Serial.print(power, 2);
  Serial.println(" W");
  Serial.println("...............................................");

  return mA;
}

void sendMessage(String message) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;

    String lineAPIUrl = "https://api.line.me/v2/bot/message/push";  // URL ‡∏Ç‡∏≠‡∏á LINE API
    String accessToken = LINE_TOKEN;  // ‡πÉ‡∏ä‡πâ Token ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î

    http.begin(lineAPIUrl);
    http.addHeader("Content-Type", "application/json");
    http.addHeader("Authorization", "Bearer " + accessToken);

    String payload = "{";
    payload += "\"to\": \"" + LINE_USER_ID + "\",";
    payload += "\"messages\": [{";
    payload += "\"type\": \"text\",";
    payload += "\"text\": \"" + message + "\"";
    payload += "}]";
    payload += "}";

    int httpResponseCode = http.POST(payload);

    if (httpResponseCode == 200) {
      Serial.println("Message sent successfully");
    } else {
      Serial.printf("Error sending message. HTTP response code: %d\n", httpResponseCode);
    }

    http.end();
  } else {
    Serial.println("WiFi not connected");
  }
}
